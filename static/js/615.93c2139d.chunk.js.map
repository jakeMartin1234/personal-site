{"version":3,"file":"static/js/615.93c2139d.chunk.js","mappings":"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","sources":["components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/Education/Degree.js","components/Resume/Education.js","data/education/courses.js","data/education/degrees.js","pages/Education.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h5>Completed Coursework</h5>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p>{data.gpa}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    gpa: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>University of California, Berkeley</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n    gpa: PropTypes.string,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","const courses = [\n  {\n    title: 'Data Structures and Programming Methodology,',\n    number: 'CS 61B',\n    university: 'UC Berkeley',\n  },\n  {\n    title: 'Computer Architecture',\n    number: 'CS 61C',\n    university: 'UC Berkeley',\n  },\n  {\n    title: 'Multivariable Calculus',\n    number: 'MATH 1023',\n    university: 'University of Sydney',\n  },\n  {\n    title: 'Physics for Engineers',\n    number: 'PHYSICS 7A',\n    university: 'UC Berkeley',\n  },\n  {\n    title: 'Discrete Mathematics and Probability Theory',\n    number: 'CS 70',\n    university: 'UC Berkeley',\n  },\n  {\n    title: 'Linear Algebra,',\n    number: 'MATH 1002',\n    university: 'University of Sydney',\n  },\n  {\n    title: 'Sound and Music Computing',\n    number: 'MUSIC 158A',\n    university: 'UC Berkeley',\n  },\n  {\n    title: 'Computer Graphics',\n    number: 'CS 184',\n    university: 'UC Berkeley',\n  },\n  {\n    title: 'Computer Security',\n    number: 'CS 161',\n    university: 'UC Berkeley',\n  },\n  {\n    title: 'Artificial Intelligence,',\n    number: 'CS 188',\n    university: 'UC Berkeley',\n  },\n  {\n    title: 'Database Systems',\n    number: 'CS 186',\n    university: 'UC Berkeley',\n  },\n  {\n    title: 'Efficient Algorithms and Intractable Problems',\n    number: 'CS 170',\n    university: 'UC Berkeley',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'UC Berkeley',\n    degree: 'Bachelor of Computer Science',\n    link: 'https://berkeley.edu',\n    year: 2023,\n    gpa: 'GPA: 3.60',\n  },\n];\n\nexport default degrees;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport Courses from '../components/Resume/Courses';\nimport EductionComponent from '../components/Resume/Education';\n\nimport courses from '../data/education/courses';\nimport degrees from '../data/education/degrees';\n\nconst sections = {\n  Education: () => <EductionComponent data={degrees} />,\n  Courses: () => <Courses data={courses} />,\n};\n\nconst Education = () => {\n  const gobearsUrl = `${process.env.PUBLIC_URL}images/gobears.jpg`;\n  return (\n    <Main\n      title=\"Eduction\"\n      description=\"\"\n      fullPage=\"true\"\n    >\n      <article className=\"post markdown\" id=\"education\">\n        <header>\n          <div className=\"title\">\n            <h2><Link to=\"/education\">Education</Link></h2>\n          </div>\n        </header>\n        <div className=\"education-container\">\n          <div className=\"left-hand-side\">\n            {Object.entries(sections).map(([name, Section]) => (\n              <Section key={name} />\n            ))}\n          </div>\n          <img className=\"go-bears\" alt=\"gobears\" src={gobearsUrl} />\n        </div>\n      </article>\n    </Main>\n  );\n};\n\nexport default Education;\n"],"names":["Course","_ref","data","last","_jsxs","className","children","href","link","number","_jsx","title","defaultProps","getRows","courses","sort","a","b","ret","university","map","course","idx","length","Courses","id","degree","gpa","Education","Degree","school","year","sections","EductionComponent","degrees","gobearsUrl","concat","process","Main","description","fullPage","Link","to","Object","entries","name","Section","alt","src"],"sourceRoot":""}