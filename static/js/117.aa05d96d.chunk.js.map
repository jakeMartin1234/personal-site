{"version":3,"file":"static/js/117.aa05d96d.chunk.js","mappings":"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","sources":["data/contact.js","components/Contact/ContactIcons.js","components/Template/Analytics.js","data/routes.js","components/Template/Hamburger.js","components/Template/Navigation.js","components/Template/SideBar.js","components/Template/ScrollToTop.js","layouts/Main.js","components/Contact/EmailLink.js","pages/Contact.js"],"sourcesContent":["import { faGithub } from '@fortawesome/free-brands-svg-icons/faGithub';\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons/faLinkedinIn';\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons/faEnvelope';\n// See https://fontawesome.com/icons?d=gallery&s=brands,regular&m=free\n// to add other icons.\n\nconst data = [\n  {\n    link: 'https://github.com/jakeMartin1234',\n    label: 'Github',\n    icon: faGithub,\n  },\n  {\n    link: 'https://www.linkedin.com/in/jake-martin-a8000b221/',\n    label: 'LinkedIn',\n    icon: faLinkedinIn,\n  },\n  {\n    link: 'mailto:jakemartinaus@gmail.com',\n    label: 'Email',\n    icon: faEnvelope,\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport data from '../../data/contact';\n\nconst ContactIcons = (props) => {\n  let icons = data;\n  if (props.discardEmail) {\n    icons = [];\n    data.forEach((s) => {\n      if (s.label !== 'Email') {\n        icons.push(s);\n      }\n    });\n  }\n  return (\n    <ul className=\"icons\">\n      {icons.map((s) => (\n        <li key={s.label}>\n          <a href={s.link} target=\"_blank\" rel=\"noreferrer\">\n            <FontAwesomeIcon icon={s.icon} />\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactIcons.propTypes = {\n  discardEmail: PropTypes.bool,\n};\n\nContactIcons.defaultProps = {\n  discardEmail: false,\n};\nexport default ContactIcons;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\nconst { NODE_ENV, REACT_APP_GA_TRACKING_ID } = process.env;\n\nif (NODE_ENV === 'production') {\n  ReactGA.initialize(REACT_APP_GA_TRACKING_ID);\n}\n\nconst Analytics = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (NODE_ENV === 'production') {\n      ReactGA.set({\n        page: pathname,\n      });\n      ReactGA.pageview(pathname);\n    }\n  }, [pathname]);\n\n  return null;\n};\n\nexport default Analytics;\n","const routes = [\n  {\n    index: true,\n    label: 'Jake Martin',\n    path: '/',\n  },\n  {\n    label: 'Education',\n    path: '/education',\n  },\n  {\n    label: 'Experience',\n    path: '/experience',\n  },\n  {\n    label: 'Projects',\n    path: '/projects',\n  },\n  {\n    label: 'Contact',\n    path: '/contact',\n  },\n];\n\nexport default routes;\n","import React, { Suspense, lazy, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport routes from '../../data/routes';\n\nconst Menu = lazy(() => import('react-burger-menu/lib/menus/slide'));\n\nconst Hamburger = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"hamburger-container\">\n      <nav className=\"main\" id=\"hambuger-nav\">\n        <ul>\n          {open ? (\n            <li className=\"menu close-menu\">\n              <div onClick={() => setOpen(!open)} className=\"menu-hover\">&#10005;</div>\n            </li>\n          ) : (\n            <li className=\"menu open-menu\">\n              <div onClick={() => setOpen(!open)} className=\"menu-hover\">&#9776;</div>\n            </li>\n          )}\n        </ul>\n      </nav>\n      <Suspense fallback={<></>}>\n        <Menu right isOpen={open}>\n          <ul className=\"hamburger-ul\">\n            {routes.map((l) => (\n              <li key={l.label}>\n                <Link to={l.path} onClick={() => setOpen(!open)}>\n                  <h3 className={l.index && 'index-li'}>{l.label}</h3>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Menu>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Hamburger;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Hamburger from './Hamburger';\nimport routes from '../../data/routes';\n\n// Websites Navbar, displays routes defined in 'src/data/routes'\nconst Navigation = () => (\n  <header id=\"header\">\n    <h1 className=\"index-link\">\n      {routes.filter((l) => l.index).map((l) => (\n        <Link key={l.label} to={l.path}>{l.label}</Link>\n      ))}\n    </h1>\n    <nav className=\"links\">\n      <ul>\n        {routes.filter((l) => !l.index).map((l) => (\n          <li key={l.label}>\n            <Link to={l.path}>{l.label}</Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n    <Hamburger />\n  </header>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ContactIcons from '../Contact/ContactIcons';\n\nconst { PUBLIC_URL } = process.env; // set automatically from package.json:homepage\n\nconst SideBar = () => (\n  <section id=\"sidebar\">\n    <section id=\"intro\">\n      <Link to=\"/\" className=\"logo\">\n        <img src={`${PUBLIC_URL}/images/me.png`} alt=\"\" />\n      </Link>\n      <header>\n        <h2>Jake Martin</h2>\n        <p><a href=\"mailto:jakemartinaus@gmail.com\">jakemartinaus@gmail.com</a></p>\n      </header>\n    </section>\n    <section id=\"footer\">\n      <ContactIcons />\n    </section>\n  </section>\n);\n\nexport default SideBar;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// See https://reacttraining.com/react-router/web/guides/scroll-restoration/scroll-to-top\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport Analytics from '../components/Template/Analytics';\nimport Navigation from '../components/Template/Navigation';\nimport SideBar from '../components/Template/SideBar';\nimport ScrollToTop from '../components/Template/ScrollToTop';\n\nconst Main = (props) => (\n  <HelmetProvider>\n    <Analytics />\n    <ScrollToTop />\n    <Helmet titleTemplate=\"%s | Jake Martin\" defaultTitle=\"Jake Martin\" defer={false}>\n      {props.title && <title>{props.title}</title>}\n      <meta name=\"description\" content={props.description} />\n    </Helmet>\n    <div id=\"wrapper\">\n      <Navigation />\n      <div id=\"main\">\n        {props.children}\n      </div>\n      {props.fullPage ? null : <SideBar />}\n    </div>\n  </HelmetProvider>\n);\n\nMain.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  fullPage: PropTypes.bool,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nMain.defaultProps = {\n  children: null,\n  fullPage: false,\n  title: null,\n  description: \"Jake Martin's personal website.\",\n};\n\nexport default Main;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// Validates the first half of an email address.\nconst validateText = (text) => {\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n  return re.test(text) || text.length === 0;\n};\n\nconst messages = [\n  'hi',\n  'hello',\n  'hola',\n  'you-can-email-me-at-literally-anything! Really',\n  'well, not anything. But most things',\n  'like-this',\n  'or-this',\n  'but not this :(  ',\n  'you.can.also.email.me.with.specific.topics.like',\n  'just-saying-hi',\n  'please-work-for-us',\n  'help',\n  'admin',\n  'or-I-really-like-your-website',\n  'thanks',\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst EmailLink = ({ loopMessage }) => {\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(0); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(() => {\n    let newIdx = idx;\n    let newChar = char;\n    if (char - hold >= messages[idx].length) {\n      newIdx += 1;\n      newChar = 0;\n    }\n    if (newIdx === messages.length) {\n      if (loopMessage) {\n        updateIter(0);\n        updateChar(0);\n      } else {\n        setIsActive(false);\n      }\n    } else {\n      updateMessage(messages[newIdx].slice(0, newChar));\n      updateIter(newIdx);\n      updateChar(newChar + 1);\n    }\n  }, isActive ? delay : null);\n\n  return (\n    <div\n      className=\"inline-container\"\n      style={validateText(message) ? {} : { color: 'red' }}\n      onMouseEnter={() => setIsActive(false)}\n      onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n    >\n      <a href={validateText(message) ? 'mailto:jakemartinaus@gmail.com' : ''}>\n        <span>jakemartinaus@gmail.com</span>\n      </a>\n    </div>\n  );\n};\n\nEmailLink.defaultProps = {\n  loopMessage: false,\n};\n\nEmailLink.propTypes = {\n  loopMessage: PropTypes.bool,\n};\n\nexport default EmailLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport EmailLink from '../components/Contact/EmailLink';\nimport ContactIcons from '../components/Contact/ContactIcons';\n\nconst Contact = () => (\n  <Main\n    title=\"Contact\"\n    description=\"Contact Jake via email @ jakemartinaus@gmail.com\"\n  >\n    <article className=\"post\" id=\"contact\">\n      <header>\n        <div className=\"title\">\n          <h2><Link to=\"/contact\">Contact</Link></h2>\n        </div>\n      </header>\n      <div className=\"email-at\">\n        <p>Feel free to get in touch. You can email me at: </p>\n        <EmailLink />\n      </div>\n      <ContactIcons />\n    </article>\n  </Main>\n);\n\nexport default Contact;\n"],"names":["link","label","icon","faGithub","faLinkedinIn","faEnvelope","ContactIcons","props","icons","data","discardEmail","s","push","_jsx","className","children","map","href","target","rel","FontAwesomeIcon","defaultProps","NODE_ENV","REACT_APP_GA_TRACKING_ID","process","ReactGA","Analytics","pathname","useLocation","useEffect","page","index","path","Menu","lazy","Hamburger","open","setOpen","useState","_jsxs","id","onClick","Suspense","fallback","_Fragment","right","isOpen","routes","l","Link","to","Navigation","PUBLIC_URL","SideBar","src","concat","alt","ScrollToTop","window","scrollTo","Main","HelmetProvider","Helmet","titleTemplate","defaultTitle","defer","title","name","content","description","fullPage","validateText","text","test","length","messages","EmailLink","_ref","loopMessage","idx","updateIter","message","updateMessage","char","updateChar","isActive","setIsActive","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","newIdx","newChar","slice","style","color","onMouseEnter","onMouseLeave","Contact"],"sourceRoot":""}